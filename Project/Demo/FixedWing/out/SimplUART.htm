<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\out\SimplUART.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\out\SimplUART.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5050106: Last Updated: Fri Aug 02 12:38:32 2019
<BR><P>
<H3>Maximum Stack Usage =        144 bytes + Unknown(Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
main &rArr; Control_Handle &rArr; PID_UP_DOWN_Control &rArr; PCA9685_Servo_Range_Control &rArr; floor &rArr; __aeabi_drsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[1]">NMI_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1]">NMI_Handler</a><BR>
 <LI><a href="#[2]">HardFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[2]">HardFault_Handler</a><BR>
 <LI><a href="#[3]">MemManage_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[3]">MemManage_Handler</a><BR>
 <LI><a href="#[4]">BusFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[4]">BusFault_Handler</a><BR>
 <LI><a href="#[5]">UsageFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[5]">UsageFault_Handler</a><BR>
 <LI><a href="#[6]">SVC_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[6]">SVC_Handler</a><BR>
 <LI><a href="#[7]">DebugMon_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[7]">DebugMon_Handler</a><BR>
 <LI><a href="#[8]">PendSV_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[8]">PendSV_Handler</a><BR>
 <LI><a href="#[9]">SysTick_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[9]">SysTick_Handler</a><BR>
 <LI><a href="#[a]">GPIOA0_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[a]">GPIOA0_Handler</a><BR>
 <LI><a href="#[b]">GPIOA1_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[b]">GPIOA1_Handler</a><BR>
 <LI><a href="#[c]">GPIOA2_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[c]">GPIOA2_Handler</a><BR>
 <LI><a href="#[d]">GPIOA3_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[d]">GPIOA3_Handler</a><BR>
 <LI><a href="#[e]">GPIOA4_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[e]">GPIOA4_Handler</a><BR>
 <LI><a href="#[f]">GPIOA5_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[f]">GPIOA5_Handler</a><BR>
 <LI><a href="#[10]">GPIOA6_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[10]">GPIOA6_Handler</a><BR>
 <LI><a href="#[11]">GPIOA7_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[11]">GPIOA7_Handler</a><BR>
 <LI><a href="#[12]">GPIOB0_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[12]">GPIOB0_Handler</a><BR>
 <LI><a href="#[13]">GPIOB1_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[13]">GPIOB1_Handler</a><BR>
 <LI><a href="#[14]">GPIOB2_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[14]">GPIOB2_Handler</a><BR>
 <LI><a href="#[15]">GPIOB3_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[15]">GPIOB3_Handler</a><BR>
 <LI><a href="#[16]">GPIOB4_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[16]">GPIOB4_Handler</a><BR>
 <LI><a href="#[17]">GPIOB5_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[17]">GPIOB5_Handler</a><BR>
 <LI><a href="#[18]">GPIOB6_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[18]">GPIOB6_Handler</a><BR>
 <LI><a href="#[19]">GPIOB7_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[19]">GPIOB7_Handler</a><BR>
 <LI><a href="#[1a]">GPIOC0_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1a]">GPIOC0_Handler</a><BR>
 <LI><a href="#[1b]">GPIOC1_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1b]">GPIOC1_Handler</a><BR>
 <LI><a href="#[1c]">GPIOC2_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1c]">GPIOC2_Handler</a><BR>
 <LI><a href="#[1d]">GPIOC3_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1d]">GPIOC3_Handler</a><BR>
 <LI><a href="#[1e]">GPIOC4_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1e]">GPIOC4_Handler</a><BR>
 <LI><a href="#[1f]">GPIOC5_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1f]">GPIOC5_Handler</a><BR>
 <LI><a href="#[20]">GPIOC6_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[20]">GPIOC6_Handler</a><BR>
 <LI><a href="#[21]">GPIOC7_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[21]">GPIOC7_Handler</a><BR>
 <LI><a href="#[22]">GPIOM0_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[22]">GPIOM0_Handler</a><BR>
 <LI><a href="#[23]">GPIOM1_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[23]">GPIOM1_Handler</a><BR>
 <LI><a href="#[24]">GPIOM2_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[24]">GPIOM2_Handler</a><BR>
 <LI><a href="#[25]">GPIOM3_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[25]">GPIOM3_Handler</a><BR>
 <LI><a href="#[26]">GPIOM4_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[26]">GPIOM4_Handler</a><BR>
 <LI><a href="#[27]">GPIOM5_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[27]">GPIOM5_Handler</a><BR>
 <LI><a href="#[28]">GPIOM6_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[28]">GPIOM6_Handler</a><BR>
 <LI><a href="#[29]">GPIOM7_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[29]">GPIOM7_Handler</a><BR>
 <LI><a href="#[2a]">DMA_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[2a]">DMA_Handler</a><BR>
 <LI><a href="#[2b]">LCD_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[2b]">LCD_Handler</a><BR>
 <LI><a href="#[2c]">NORFLC_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[2c]">NORFLC_Handler</a><BR>
 <LI><a href="#[2d]">CAN_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[2d]">CAN_Handler</a><BR>
 <LI><a href="#[2e]">PULSE_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[2e]">PULSE_Handler</a><BR>
 <LI><a href="#[2f]">WDT_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[2f]">WDT_Handler</a><BR>
 <LI><a href="#[30]">PWM_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[30]">PWM_Handler</a><BR>
 <LI><a href="#[31]">UART0_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[31]">UART0_Handler</a><BR>
 <LI><a href="#[34]">UART3_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[34]">UART3_Handler</a><BR>
 <LI><a href="#[35]">I2C0_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[35]">I2C0_Handler</a><BR>
 <LI><a href="#[36]">I2C1_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[36]">I2C1_Handler</a><BR>
 <LI><a href="#[37]">SPI0_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[37]">SPI0_Handler</a><BR>
 <LI><a href="#[38]">ADC0_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[38]">ADC0_Handler</a><BR>
 <LI><a href="#[39]">RTC_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[39]">RTC_Handler</a><BR>
 <LI><a href="#[3a]">BOD_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[3a]">BOD_Handler</a><BR>
 <LI><a href="#[3b]">SDIO_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[3b]">SDIO_Handler</a><BR>
 <LI><a href="#[3c]">GPIOA_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[3c]">GPIOA_Handler</a><BR>
 <LI><a href="#[3d]">GPIOB_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[3d]">GPIOB_Handler</a><BR>
 <LI><a href="#[3e]">GPIOC_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[3e]">GPIOC_Handler</a><BR>
 <LI><a href="#[3f]">GPIOM_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[3f]">GPIOM_Handler</a><BR>
 <LI><a href="#[40]">GPION_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[40]">GPION_Handler</a><BR>
 <LI><a href="#[41]">GPIOP_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[41]">GPIOP_Handler</a><BR>
 <LI><a href="#[42]">ADC1_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[42]">ADC1_Handler</a><BR>
 <LI><a href="#[43]">FPU_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[43]">FPU_Handler</a><BR>
 <LI><a href="#[44]">SPI1_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[44]">SPI1_Handler</a><BR>
 <LI><a href="#[46]">TIMR1_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[46]">TIMR1_Handler</a><BR>
 <LI><a href="#[47]">TIMR2_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[47]">TIMR2_Handler</a><BR>
 <LI><a href="#[48]">TIMR3_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[48]">TIMR3_Handler</a><BR>
 <LI><a href="#[49]">TIMR4_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[49]">TIMR4_Handler</a><BR>
 <LI><a href="#[4a]">TIMR5_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[4a]">TIMR5_Handler</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[38]">ADC0_Handler</a> from startup_swm320.o(.text) referenced from startup_swm320.o(RESET)
 <LI><a href="#[42]">ADC1_Handler</a> from startup_swm320.o(.text) referenced from startup_swm320.o(RESET)
 <LI><a href="#[3a]">BOD_Handler</a> from startup_swm320.o(.text) referenced from startup_swm320.o(RESET)
 <LI><a href="#[4]">BusFault_Handler</a> from startup_swm320.o(.text) referenced from startup_swm320.o(RESET)
 <LI><a href="#[2d]">CAN_Handler</a> from startup_swm320.o(.text) referenced from startup_swm320.o(RESET)
 <LI><a href="#[2a]">DMA_Handler</a> from startup_swm320.o(.text) referenced from startup_swm320.o(RESET)
 <LI><a href="#[7]">DebugMon_Handler</a> from startup_swm320.o(.text) referenced from startup_swm320.o(RESET)
 <LI><a href="#[43]">FPU_Handler</a> from startup_swm320.o(.text) referenced from startup_swm320.o(RESET)
 <LI><a href="#[a]">GPIOA0_Handler</a> from startup_swm320.o(.text) referenced from startup_swm320.o(RESET)
 <LI><a href="#[b]">GPIOA1_Handler</a> from startup_swm320.o(.text) referenced from startup_swm320.o(RESET)
 <LI><a href="#[c]">GPIOA2_Handler</a> from startup_swm320.o(.text) referenced from startup_swm320.o(RESET)
 <LI><a href="#[d]">GPIOA3_Handler</a> from startup_swm320.o(.text) referenced from startup_swm320.o(RESET)
 <LI><a href="#[e]">GPIOA4_Handler</a> from startup_swm320.o(.text) referenced from startup_swm320.o(RESET)
 <LI><a href="#[f]">GPIOA5_Handler</a> from startup_swm320.o(.text) referenced from startup_swm320.o(RESET)
 <LI><a href="#[10]">GPIOA6_Handler</a> from startup_swm320.o(.text) referenced from startup_swm320.o(RESET)
 <LI><a href="#[11]">GPIOA7_Handler</a> from startup_swm320.o(.text) referenced from startup_swm320.o(RESET)
 <LI><a href="#[3c]">GPIOA_Handler</a> from startup_swm320.o(.text) referenced from startup_swm320.o(RESET)
 <LI><a href="#[12]">GPIOB0_Handler</a> from startup_swm320.o(.text) referenced from startup_swm320.o(RESET)
 <LI><a href="#[13]">GPIOB1_Handler</a> from startup_swm320.o(.text) referenced from startup_swm320.o(RESET)
 <LI><a href="#[14]">GPIOB2_Handler</a> from startup_swm320.o(.text) referenced from startup_swm320.o(RESET)
 <LI><a href="#[15]">GPIOB3_Handler</a> from startup_swm320.o(.text) referenced from startup_swm320.o(RESET)
 <LI><a href="#[16]">GPIOB4_Handler</a> from startup_swm320.o(.text) referenced from startup_swm320.o(RESET)
 <LI><a href="#[17]">GPIOB5_Handler</a> from startup_swm320.o(.text) referenced from startup_swm320.o(RESET)
 <LI><a href="#[18]">GPIOB6_Handler</a> from startup_swm320.o(.text) referenced from startup_swm320.o(RESET)
 <LI><a href="#[19]">GPIOB7_Handler</a> from startup_swm320.o(.text) referenced from startup_swm320.o(RESET)
 <LI><a href="#[3d]">GPIOB_Handler</a> from startup_swm320.o(.text) referenced from startup_swm320.o(RESET)
 <LI><a href="#[1a]">GPIOC0_Handler</a> from startup_swm320.o(.text) referenced from startup_swm320.o(RESET)
 <LI><a href="#[1b]">GPIOC1_Handler</a> from startup_swm320.o(.text) referenced from startup_swm320.o(RESET)
 <LI><a href="#[1c]">GPIOC2_Handler</a> from startup_swm320.o(.text) referenced from startup_swm320.o(RESET)
 <LI><a href="#[1d]">GPIOC3_Handler</a> from startup_swm320.o(.text) referenced from startup_swm320.o(RESET)
 <LI><a href="#[1e]">GPIOC4_Handler</a> from startup_swm320.o(.text) referenced from startup_swm320.o(RESET)
 <LI><a href="#[1f]">GPIOC5_Handler</a> from startup_swm320.o(.text) referenced from startup_swm320.o(RESET)
 <LI><a href="#[20]">GPIOC6_Handler</a> from startup_swm320.o(.text) referenced from startup_swm320.o(RESET)
 <LI><a href="#[21]">GPIOC7_Handler</a> from startup_swm320.o(.text) referenced from startup_swm320.o(RESET)
 <LI><a href="#[3e]">GPIOC_Handler</a> from startup_swm320.o(.text) referenced from startup_swm320.o(RESET)
 <LI><a href="#[22]">GPIOM0_Handler</a> from startup_swm320.o(.text) referenced from startup_swm320.o(RESET)
 <LI><a href="#[23]">GPIOM1_Handler</a> from startup_swm320.o(.text) referenced from startup_swm320.o(RESET)
 <LI><a href="#[24]">GPIOM2_Handler</a> from startup_swm320.o(.text) referenced from startup_swm320.o(RESET)
 <LI><a href="#[25]">GPIOM3_Handler</a> from startup_swm320.o(.text) referenced from startup_swm320.o(RESET)
 <LI><a href="#[26]">GPIOM4_Handler</a> from startup_swm320.o(.text) referenced from startup_swm320.o(RESET)
 <LI><a href="#[27]">GPIOM5_Handler</a> from startup_swm320.o(.text) referenced from startup_swm320.o(RESET)
 <LI><a href="#[28]">GPIOM6_Handler</a> from startup_swm320.o(.text) referenced from startup_swm320.o(RESET)
 <LI><a href="#[29]">GPIOM7_Handler</a> from startup_swm320.o(.text) referenced from startup_swm320.o(RESET)
 <LI><a href="#[3f]">GPIOM_Handler</a> from startup_swm320.o(.text) referenced from startup_swm320.o(RESET)
 <LI><a href="#[40]">GPION_Handler</a> from startup_swm320.o(.text) referenced from startup_swm320.o(RESET)
 <LI><a href="#[41]">GPIOP_Handler</a> from startup_swm320.o(.text) referenced from startup_swm320.o(RESET)
 <LI><a href="#[2]">HardFault_Handler</a> from startup_swm320.o(.text) referenced from startup_swm320.o(RESET)
 <LI><a href="#[35]">I2C0_Handler</a> from startup_swm320.o(.text) referenced from startup_swm320.o(RESET)
 <LI><a href="#[36]">I2C1_Handler</a> from startup_swm320.o(.text) referenced from startup_swm320.o(RESET)
 <LI><a href="#[2b]">LCD_Handler</a> from startup_swm320.o(.text) referenced from startup_swm320.o(RESET)
 <LI><a href="#[3]">MemManage_Handler</a> from startup_swm320.o(.text) referenced from startup_swm320.o(RESET)
 <LI><a href="#[1]">NMI_Handler</a> from startup_swm320.o(.text) referenced from startup_swm320.o(RESET)
 <LI><a href="#[2c]">NORFLC_Handler</a> from startup_swm320.o(.text) referenced from startup_swm320.o(RESET)
 <LI><a href="#[2e]">PULSE_Handler</a> from startup_swm320.o(.text) referenced from startup_swm320.o(RESET)
 <LI><a href="#[30]">PWM_Handler</a> from startup_swm320.o(.text) referenced from startup_swm320.o(RESET)
 <LI><a href="#[8]">PendSV_Handler</a> from startup_swm320.o(.text) referenced from startup_swm320.o(RESET)
 <LI><a href="#[39]">RTC_Handler</a> from startup_swm320.o(.text) referenced from startup_swm320.o(RESET)
 <LI><a href="#[0]">Reset_Handler</a> from startup_swm320.o(.text) referenced from startup_swm320.o(RESET)
 <LI><a href="#[3b]">SDIO_Handler</a> from startup_swm320.o(.text) referenced from startup_swm320.o(RESET)
 <LI><a href="#[37]">SPI0_Handler</a> from startup_swm320.o(.text) referenced from startup_swm320.o(RESET)
 <LI><a href="#[44]">SPI1_Handler</a> from startup_swm320.o(.text) referenced from startup_swm320.o(RESET)
 <LI><a href="#[6]">SVC_Handler</a> from startup_swm320.o(.text) referenced from startup_swm320.o(RESET)
 <LI><a href="#[9]">SysTick_Handler</a> from startup_swm320.o(.text) referenced from startup_swm320.o(RESET)
 <LI><a href="#[45]">TIMR0_Handler</a> from pid.o(.text) referenced from startup_swm320.o(RESET)
 <LI><a href="#[46]">TIMR1_Handler</a> from startup_swm320.o(.text) referenced from startup_swm320.o(RESET)
 <LI><a href="#[47]">TIMR2_Handler</a> from startup_swm320.o(.text) referenced from startup_swm320.o(RESET)
 <LI><a href="#[48]">TIMR3_Handler</a> from startup_swm320.o(.text) referenced from startup_swm320.o(RESET)
 <LI><a href="#[49]">TIMR4_Handler</a> from startup_swm320.o(.text) referenced from startup_swm320.o(RESET)
 <LI><a href="#[4a]">TIMR5_Handler</a> from startup_swm320.o(.text) referenced from startup_swm320.o(RESET)
 <LI><a href="#[31]">UART0_Handler</a> from startup_swm320.o(.text) referenced from startup_swm320.o(RESET)
 <LI><a href="#[32]">UART1_Handler</a> from sbus.o(.text) referenced from startup_swm320.o(RESET)
 <LI><a href="#[33]">UART2_Handler</a> from mpu6050_uart.o(.text) referenced from startup_swm320.o(RESET)
 <LI><a href="#[34]">UART3_Handler</a> from startup_swm320.o(.text) referenced from startup_swm320.o(RESET)
 <LI><a href="#[5]">UsageFault_Handler</a> from startup_swm320.o(.text) referenced from startup_swm320.o(RESET)
 <LI><a href="#[2f]">WDT_Handler</a> from startup_swm320.o(.text) referenced from startup_swm320.o(RESET)
 <LI><a href="#[4c]">__main</a> from entry.o(.ARM.Collect$$$$00000000) referenced from startup_swm320.o(.text)
 <LI><a href="#[4d]">fputc</a> from log.o(.text) referenced from printfb.o(i.__0printf$bare)
 <LI><a href="#[4b]">main</a> from main.o(.text) referenced from entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[4c]"></a>__main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry.o(.ARM.Collect$$$$00000000))
<BR>[Address Reference Count : 1]<UL><LI> startup_swm320.o(.text)
</UL>
<P><STRONG><a name="[a6]"></a>_main_stk</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry2.o(.ARM.Collect$$$$00000001))

<P><STRONG><a name="[4e]"></a>_main_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[a2]"></a>__main_after_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Called By]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[a7]"></a>_main_clock</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry7b.o(.ARM.Collect$$$$00000008))

<P><STRONG><a name="[a8]"></a>_main_cpp_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry8b.o(.ARM.Collect$$$$0000000A))

<P><STRONG><a name="[a9]"></a>_main_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry9a.o(.ARM.Collect$$$$0000000B))

<P><STRONG><a name="[aa]"></a>__rt_final_cpp</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry10a.o(.ARM.Collect$$$$0000000D))

<P><STRONG><a name="[ab]"></a>__rt_final_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry11a.o(.ARM.Collect$$$$0000000F))

<P><STRONG><a name="[4b]"></a>main</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = main &rArr; Control_Handle &rArr; PID_UP_DOWN_Control &rArr; PCA9685_Servo_Range_Control &rArr; floor &rArr; __aeabi_drsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;is_Auto_Manual
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInit
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SBUS_Init
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SBUS_Handle
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PID_Init
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PCA9685_Init
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MPU6050_UART_Handle
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MPU6050_Init
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Log_Init
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ESC_Servo_Init
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Control_Handle
</UL>
<BR>[Address Reference Count : 1]<UL><LI> entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P><STRONG><a name="[5c]"></a>I2C_Close</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, swm320_i2c.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Init
</UL>

<P><STRONG><a name="[5b]"></a>I2C_Init</STRONG> (Thumb, 400 bytes, Stack size 16 bytes, swm320_i2c.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = I2C_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Close
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_DisableIRQ
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_EnableIRQ
</UL>
<BR>[Called By]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C0_Init
</UL>

<P><STRONG><a name="[86]"></a>I2C_Open</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, swm320_i2c.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C0_Init
</UL>

<P><STRONG><a name="[60]"></a>TIMR_Stop</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, swm320_timr.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMR_Init
</UL>

<P><STRONG><a name="[5f]"></a>TIMR_Init</STRONG> (Thumb, 284 bytes, Stack size 16 bytes, swm320_timr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = TIMR_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMR_Stop
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_EnableIRQ
</UL>
<BR>[Called By]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PID_Init
</UL>

<P><STRONG><a name="[7c]"></a>TIMR_Start</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, swm320_timr.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PID_Init
</UL>

<P><STRONG><a name="[ac]"></a>TIMR_Halt</STRONG> (Thumb, 98 bytes, Stack size 0 bytes, swm320_timr.o(.text), UNUSED)

<P><STRONG><a name="[ad]"></a>TIMR_Resume</STRONG> (Thumb, 98 bytes, Stack size 0 bytes, swm320_timr.o(.text), UNUSED)

<P><STRONG><a name="[ae]"></a>TIMR_SetPeriod</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, swm320_timr.o(.text), UNUSED)

<P><STRONG><a name="[af]"></a>TIMR_GetPeriod</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, swm320_timr.o(.text), UNUSED)

<P><STRONG><a name="[b0]"></a>TIMR_GetCurValue</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, swm320_timr.o(.text), UNUSED)

<P><STRONG><a name="[62]"></a>TIMR_INTEn</STRONG> (Thumb, 124 bytes, Stack size 0 bytes, swm320_timr.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_EnableIRQ
</UL>

<P><STRONG><a name="[b1]"></a>TIMR_INTDis</STRONG> (Thumb, 98 bytes, Stack size 0 bytes, swm320_timr.o(.text), UNUSED)

<P><STRONG><a name="[7d]"></a>TIMR_INTClr</STRONG> (Thumb, 74 bytes, Stack size 0 bytes, swm320_timr.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMR0_Handler
</UL>

<P><STRONG><a name="[b2]"></a>TIMR_INTStat</STRONG> (Thumb, 92 bytes, Stack size 0 bytes, swm320_timr.o(.text), UNUSED)

<P><STRONG><a name="[64]"></a>UART_Close</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, swm320_uart.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Init
</UL>

<P><STRONG><a name="[63]"></a>UART_Init</STRONG> (Thumb, 374 bytes, Stack size 24 bytes, swm320_uart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = UART_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Close
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_DisableIRQ
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_EnableIRQ
</UL>
<BR>[Called By]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SBUS_Init
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MPU6050_Init
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Log_Init
</UL>

<P><STRONG><a name="[6b]"></a>UART_Open</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, swm320_uart.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SBUS_Init
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MPU6050_Init
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Log_Init
</UL>

<P><STRONG><a name="[72]"></a>UART_WriteByte</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, swm320_uart.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fputc
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MPU6050_SendCommand
</UL>

<P><STRONG><a name="[6f]"></a>UART_ReadByte</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, swm320_uart.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART2_Handler
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART1_Handler
</UL>

<P><STRONG><a name="[73]"></a>UART_IsTXBusy</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, swm320_uart.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fputc
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MPU6050_SendCommand
</UL>

<P><STRONG><a name="[70]"></a>UART_IsRXFIFOEmpty</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, swm320_uart.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART2_Handler
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART1_Handler
</UL>

<P><STRONG><a name="[b3]"></a>UART_IsTXFIFOFull</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, swm320_uart.o(.text), UNUSED)

<P><STRONG><a name="[b4]"></a>UART_SetBaudrate</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, swm320_uart.o(.text), UNUSED)

<P><STRONG><a name="[b5]"></a>UART_GetBaudrate</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, swm320_uart.o(.text), UNUSED)

<P><STRONG><a name="[b6]"></a>UART_CTSConfig</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, swm320_uart.o(.text), UNUSED)

<P><STRONG><a name="[b7]"></a>UART_CTSLineState</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, swm320_uart.o(.text), UNUSED)

<P><STRONG><a name="[b8]"></a>UART_RTSConfig</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, swm320_uart.o(.text), UNUSED)

<P><STRONG><a name="[b9]"></a>UART_RTSLineState</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, swm320_uart.o(.text), UNUSED)

<P><STRONG><a name="[ba]"></a>UART_LINConfig</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, swm320_uart.o(.text), UNUSED)

<P><STRONG><a name="[bb]"></a>UART_LINGenerate</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, swm320_uart.o(.text), UNUSED)

<P><STRONG><a name="[bc]"></a>UART_LINIsDetected</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, swm320_uart.o(.text), UNUSED)

<P><STRONG><a name="[bd]"></a>UART_LINIsGenerated</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, swm320_uart.o(.text), UNUSED)

<P><STRONG><a name="[be]"></a>UART_ABRStart</STRONG> (Thumb, 82 bytes, Stack size 0 bytes, swm320_uart.o(.text), UNUSED)

<P><STRONG><a name="[bf]"></a>UART_ABRIsDone</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, swm320_uart.o(.text), UNUSED)

<P><STRONG><a name="[c0]"></a>UART_INTRXThresholdEn</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, swm320_uart.o(.text), UNUSED)

<P><STRONG><a name="[c1]"></a>UART_INTRXThresholdDis</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, swm320_uart.o(.text), UNUSED)

<P><STRONG><a name="[6d]"></a>UART_INTRXThresholdStat</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, swm320_uart.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART2_Handler
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART1_Handler
</UL>

<P><STRONG><a name="[c2]"></a>UART_INTTXThresholdEn</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, swm320_uart.o(.text), UNUSED)

<P><STRONG><a name="[c3]"></a>UART_INTTXThresholdDis</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, swm320_uart.o(.text), UNUSED)

<P><STRONG><a name="[c4]"></a>UART_INTTXThresholdStat</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, swm320_uart.o(.text), UNUSED)

<P><STRONG><a name="[c5]"></a>UART_INTTimeoutEn</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, swm320_uart.o(.text), UNUSED)

<P><STRONG><a name="[c6]"></a>UART_INTTimeoutDis</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, swm320_uart.o(.text), UNUSED)

<P><STRONG><a name="[6e]"></a>UART_INTTimeoutStat</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, swm320_uart.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART2_Handler
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART1_Handler
</UL>

<P><STRONG><a name="[c7]"></a>UART_INTTXDoneEn</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, swm320_uart.o(.text), UNUSED)

<P><STRONG><a name="[c8]"></a>UART_INTTXDoneDis</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, swm320_uart.o(.text), UNUSED)

<P><STRONG><a name="[c9]"></a>UART_INTTXDoneStat</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, swm320_uart.o(.text), UNUSED)

<P><STRONG><a name="[6a]"></a>PORT_Init</STRONG> (Thumb, 1058 bytes, Stack size 60 bytes, swm320_port.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = PORT_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SBUS_Init
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MPU6050_Init
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Log_Init
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C0_Init
</UL>

<P><STRONG><a name="[69]"></a>SystemCoreClockUpdate</STRONG> (Thumb, 88 bytes, Stack size 8 bytes, system_swm320.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SystemCoreClockUpdate
</UL>
<BR>[Called By]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInit
</UL>

<P><STRONG><a name="[68]"></a>PLLInit</STRONG> (Thumb, 58 bytes, Stack size 0 bytes, system_swm320.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;switchCLK_PLL
</UL>

<P><STRONG><a name="[67]"></a>switchCLK_PLL</STRONG> (Thumb, 52 bytes, Stack size 4 bytes, system_swm320.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = switchCLK_PLL
</UL>
<BR>[Calls]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PLLInit
</UL>
<BR>[Called By]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInit
</UL>

<P><STRONG><a name="[ca]"></a>switchCLK_XTAL</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, system_swm320.o(.text), UNUSED)

<P><STRONG><a name="[cb]"></a>switchCLK_32KHz</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, system_swm320.o(.text), UNUSED)

<P><STRONG><a name="[cc]"></a>switchCLK_40MHz</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, system_swm320.o(.text), UNUSED)

<P><STRONG><a name="[cd]"></a>switchCLK_20MHz</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, system_swm320.o(.text), UNUSED)

<P><STRONG><a name="[50]"></a>SystemInit</STRONG> (Thumb, 36 bytes, Stack size 4 bytes, system_swm320.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = SystemInit &rArr; SystemCoreClockUpdate
</UL>
<BR>[Calls]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;switchCLK_PLL
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemCoreClockUpdate
</UL>
<BR>[Called By]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[0]"></a>Reset_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, startup_swm320.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_swm320.o(RESET)
</UL>
<P><STRONG><a name="[1]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_swm320.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_swm320.o(RESET)
</UL>
<P><STRONG><a name="[2]"></a>HardFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_swm320.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_swm320.o(RESET)
</UL>
<P><STRONG><a name="[3]"></a>MemManage_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_swm320.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemManage_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemManage_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_swm320.o(RESET)
</UL>
<P><STRONG><a name="[4]"></a>BusFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_swm320.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_swm320.o(RESET)
</UL>
<P><STRONG><a name="[5]"></a>UsageFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_swm320.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsageFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsageFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_swm320.o(RESET)
</UL>
<P><STRONG><a name="[6]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_swm320.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_swm320.o(RESET)
</UL>
<P><STRONG><a name="[7]"></a>DebugMon_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_swm320.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DebugMon_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DebugMon_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_swm320.o(RESET)
</UL>
<P><STRONG><a name="[8]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_swm320.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_swm320.o(RESET)
</UL>
<P><STRONG><a name="[9]"></a>SysTick_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_swm320.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_swm320.o(RESET)
</UL>
<P><STRONG><a name="[a]"></a>GPIOA0_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_swm320.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOA0_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOA0_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_swm320.o(RESET)
</UL>
<P><STRONG><a name="[b]"></a>GPIOA1_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_swm320.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOA1_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOA1_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_swm320.o(RESET)
</UL>
<P><STRONG><a name="[c]"></a>GPIOA2_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_swm320.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOA2_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOA2_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_swm320.o(RESET)
</UL>
<P><STRONG><a name="[d]"></a>GPIOA3_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_swm320.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOA3_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOA3_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_swm320.o(RESET)
</UL>
<P><STRONG><a name="[e]"></a>GPIOA4_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_swm320.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOA4_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOA4_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_swm320.o(RESET)
</UL>
<P><STRONG><a name="[f]"></a>GPIOA5_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_swm320.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOA5_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOA5_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_swm320.o(RESET)
</UL>
<P><STRONG><a name="[10]"></a>GPIOA6_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_swm320.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOA6_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOA6_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_swm320.o(RESET)
</UL>
<P><STRONG><a name="[11]"></a>GPIOA7_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_swm320.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOA7_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOA7_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_swm320.o(RESET)
</UL>
<P><STRONG><a name="[12]"></a>GPIOB0_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_swm320.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOB0_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOB0_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_swm320.o(RESET)
</UL>
<P><STRONG><a name="[13]"></a>GPIOB1_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_swm320.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOB1_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOB1_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_swm320.o(RESET)
</UL>
<P><STRONG><a name="[14]"></a>GPIOB2_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_swm320.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOB2_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOB2_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_swm320.o(RESET)
</UL>
<P><STRONG><a name="[15]"></a>GPIOB3_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_swm320.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOB3_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOB3_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_swm320.o(RESET)
</UL>
<P><STRONG><a name="[16]"></a>GPIOB4_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_swm320.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOB4_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOB4_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_swm320.o(RESET)
</UL>
<P><STRONG><a name="[17]"></a>GPIOB5_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_swm320.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOB5_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOB5_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_swm320.o(RESET)
</UL>
<P><STRONG><a name="[18]"></a>GPIOB6_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_swm320.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOB6_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOB6_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_swm320.o(RESET)
</UL>
<P><STRONG><a name="[19]"></a>GPIOB7_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_swm320.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOB7_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOB7_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_swm320.o(RESET)
</UL>
<P><STRONG><a name="[1a]"></a>GPIOC0_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_swm320.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOC0_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOC0_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_swm320.o(RESET)
</UL>
<P><STRONG><a name="[1b]"></a>GPIOC1_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_swm320.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOC1_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOC1_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_swm320.o(RESET)
</UL>
<P><STRONG><a name="[1c]"></a>GPIOC2_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_swm320.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOC2_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOC2_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_swm320.o(RESET)
</UL>
<P><STRONG><a name="[1d]"></a>GPIOC3_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_swm320.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOC3_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOC3_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_swm320.o(RESET)
</UL>
<P><STRONG><a name="[1e]"></a>GPIOC4_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_swm320.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOC4_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOC4_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_swm320.o(RESET)
</UL>
<P><STRONG><a name="[1f]"></a>GPIOC5_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_swm320.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOC5_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOC5_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_swm320.o(RESET)
</UL>
<P><STRONG><a name="[20]"></a>GPIOC6_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_swm320.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOC6_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOC6_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_swm320.o(RESET)
</UL>
<P><STRONG><a name="[21]"></a>GPIOC7_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_swm320.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOC7_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOC7_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_swm320.o(RESET)
</UL>
<P><STRONG><a name="[22]"></a>GPIOM0_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_swm320.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOM0_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOM0_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_swm320.o(RESET)
</UL>
<P><STRONG><a name="[23]"></a>GPIOM1_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_swm320.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOM1_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOM1_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_swm320.o(RESET)
</UL>
<P><STRONG><a name="[24]"></a>GPIOM2_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_swm320.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOM2_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOM2_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_swm320.o(RESET)
</UL>
<P><STRONG><a name="[25]"></a>GPIOM3_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_swm320.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOM3_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOM3_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_swm320.o(RESET)
</UL>
<P><STRONG><a name="[26]"></a>GPIOM4_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_swm320.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOM4_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOM4_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_swm320.o(RESET)
</UL>
<P><STRONG><a name="[27]"></a>GPIOM5_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_swm320.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOM5_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOM5_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_swm320.o(RESET)
</UL>
<P><STRONG><a name="[28]"></a>GPIOM6_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_swm320.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOM6_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOM6_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_swm320.o(RESET)
</UL>
<P><STRONG><a name="[29]"></a>GPIOM7_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_swm320.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOM7_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOM7_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_swm320.o(RESET)
</UL>
<P><STRONG><a name="[2a]"></a>DMA_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_swm320.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_swm320.o(RESET)
</UL>
<P><STRONG><a name="[2b]"></a>LCD_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_swm320.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_swm320.o(RESET)
</UL>
<P><STRONG><a name="[2c]"></a>NORFLC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_swm320.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NORFLC_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NORFLC_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_swm320.o(RESET)
</UL>
<P><STRONG><a name="[2d]"></a>CAN_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_swm320.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAN_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAN_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_swm320.o(RESET)
</UL>
<P><STRONG><a name="[2e]"></a>PULSE_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_swm320.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PULSE_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PULSE_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_swm320.o(RESET)
</UL>
<P><STRONG><a name="[2f]"></a>WDT_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_swm320.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WDT_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WDT_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_swm320.o(RESET)
</UL>
<P><STRONG><a name="[30]"></a>PWM_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_swm320.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWM_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWM_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_swm320.o(RESET)
</UL>
<P><STRONG><a name="[31]"></a>UART0_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_swm320.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART0_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART0_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_swm320.o(RESET)
</UL>
<P><STRONG><a name="[34]"></a>UART3_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_swm320.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART3_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART3_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_swm320.o(RESET)
</UL>
<P><STRONG><a name="[35]"></a>I2C0_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_swm320.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C0_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C0_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_swm320.o(RESET)
</UL>
<P><STRONG><a name="[36]"></a>I2C1_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_swm320.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C1_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C1_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_swm320.o(RESET)
</UL>
<P><STRONG><a name="[37]"></a>SPI0_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_swm320.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI0_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI0_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_swm320.o(RESET)
</UL>
<P><STRONG><a name="[38]"></a>ADC0_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_swm320.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC0_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC0_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_swm320.o(RESET)
</UL>
<P><STRONG><a name="[39]"></a>RTC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_swm320.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_swm320.o(RESET)
</UL>
<P><STRONG><a name="[3a]"></a>BOD_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_swm320.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BOD_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BOD_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_swm320.o(RESET)
</UL>
<P><STRONG><a name="[3b]"></a>SDIO_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_swm320.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDIO_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDIO_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_swm320.o(RESET)
</UL>
<P><STRONG><a name="[3c]"></a>GPIOA_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_swm320.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOA_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOA_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_swm320.o(RESET)
</UL>
<P><STRONG><a name="[3d]"></a>GPIOB_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_swm320.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOB_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOB_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_swm320.o(RESET)
</UL>
<P><STRONG><a name="[3e]"></a>GPIOC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_swm320.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOC_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOC_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_swm320.o(RESET)
</UL>
<P><STRONG><a name="[3f]"></a>GPIOM_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_swm320.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOM_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOM_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_swm320.o(RESET)
</UL>
<P><STRONG><a name="[40]"></a>GPION_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_swm320.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPION_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPION_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_swm320.o(RESET)
</UL>
<P><STRONG><a name="[41]"></a>GPIOP_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_swm320.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOP_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOP_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_swm320.o(RESET)
</UL>
<P><STRONG><a name="[42]"></a>ADC1_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_swm320.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC1_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC1_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_swm320.o(RESET)
</UL>
<P><STRONG><a name="[43]"></a>FPU_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_swm320.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FPU_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FPU_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_swm320.o(RESET)
</UL>
<P><STRONG><a name="[44]"></a>SPI1_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_swm320.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI1_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI1_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_swm320.o(RESET)
</UL>
<P><STRONG><a name="[46]"></a>TIMR1_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_swm320.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMR1_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMR1_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_swm320.o(RESET)
</UL>
<P><STRONG><a name="[47]"></a>TIMR2_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_swm320.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMR2_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMR2_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_swm320.o(RESET)
</UL>
<P><STRONG><a name="[48]"></a>TIMR3_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_swm320.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMR3_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMR3_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_swm320.o(RESET)
</UL>
<P><STRONG><a name="[49]"></a>TIMR4_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_swm320.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMR4_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMR4_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_swm320.o(RESET)
</UL>
<P><STRONG><a name="[4a]"></a>TIMR5_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_swm320.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMR5_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMR5_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_swm320.o(RESET)
</UL>
<P><STRONG><a name="[52]"></a>SBUS_Init</STRONG> (Thumb, 80 bytes, Stack size 24 bytes, sbus.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = SBUS_Init &rArr; PORT_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Open
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Init
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PORT_Init
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[32]"></a>UART1_Handler</STRONG> (Thumb, 112 bytes, Stack size 32 bytes, sbus.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = UART1_Handler
</UL>
<BR>[Calls]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_INTTimeoutStat
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_INTRXThresholdStat
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_IsRXFIFOEmpty
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_ReadByte
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_swm320.o(RESET)
</UL>
<P><STRONG><a name="[57]"></a>SBUS_Handle</STRONG> (Thumb, 294 bytes, Stack size 16 bytes, sbus.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = SBUS_Handle
</UL>
<BR>[Called By]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[71]"></a>MPU6050_SendCommand</STRONG> (Thumb, 44 bytes, Stack size 24 bytes, mpu6050_uart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = MPU6050_SendCommand
</UL>
<BR>[Calls]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_IsTXBusy
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_WriteByte
</UL>
<BR>[Called By]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MPU6050_Init
</UL>

<P><STRONG><a name="[53]"></a>MPU6050_Init</STRONG> (Thumb, 98 bytes, Stack size 24 bytes, mpu6050_uart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = MPU6050_Init &rArr; PORT_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Open
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Init
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PORT_Init
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MPU6050_SendCommand
</UL>
<BR>[Called By]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[7a]"></a>Clear_Data</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, mpu6050_uart.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MPU6050_UART_Handle
</UL>

<P><STRONG><a name="[33]"></a>UART2_Handler</STRONG> (Thumb, 116 bytes, Stack size 32 bytes, mpu6050_uart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = UART2_Handler
</UL>
<BR>[Calls]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_INTTimeoutStat
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_INTRXThresholdStat
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_IsRXFIFOEmpty
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_ReadByte
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_swm320.o(RESET)
</UL>
<P><STRONG><a name="[58]"></a>MPU6050_UART_Handle</STRONG> (Thumb, 508 bytes, Stack size 40 bytes, mpu6050_uart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = MPU6050_UART_Handle &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_scalbn
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Clear_Data
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_EnableIRQ
</UL>
<BR>[Called By]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[54]"></a>PID_Init</STRONG> (Thumb, 64 bytes, Stack size 8 bytes, pid.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = PID_Init &rArr; TIMR_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMR_Start
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMR_Init
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[45]"></a>TIMR0_Handler</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, pid.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = TIMR0_Handler
</UL>
<BR>[Calls]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMR_INTClr
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_swm320.o(RESET)
</UL>
<P><STRONG><a name="[7e]"></a>PID_Handle</STRONG> (Thumb, 372 bytes, Stack size 32 bytes, pid.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = PID_Handle &rArr; __aeabi_fsub &rArr; __aeabi_fadd &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_frsub
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_scalbnf
</UL>
<BR>[Called By]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PID_UP_DOWN_Control
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PID_Aileron_Control
</UL>

<P><STRONG><a name="[85]"></a>I2C0_Init</STRONG> (Thumb, 88 bytes, Stack size 32 bytes, pca9685.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = I2C0_Init &rArr; PORT_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Open
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Init
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PORT_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PCA9685_Init
</UL>

<P><STRONG><a name="[8c]"></a>PCA9685_Write</STRONG> (Thumb, 96 bytes, Stack size 16 bytes, pca9685.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = PCA9685_Write
</UL>
<BR>[Called By]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PCA9685_Set_PWM
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PCA9685_Set_Freq
</UL>

<P><STRONG><a name="[91]"></a>PCA9685_Read</STRONG> (Thumb, 98 bytes, Stack size 8 bytes, pca9685.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = PCA9685_Read
</UL>
<BR>[Called By]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PCA9685_Init
</UL>

<P><STRONG><a name="[87]"></a>PCA9685_Set_Freq</STRONG> (Thumb, 118 bytes, Stack size 16 bytes, pca9685.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = PCA9685_Set_Freq &rArr; floor &rArr; __aeabi_drsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;floor
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2uiz
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PCA9685_Write
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
</UL>
<BR>[Called By]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PCA9685_Init
</UL>

<P><STRONG><a name="[8d]"></a>PCA9685_Set_PWM</STRONG> (Thumb, 68 bytes, Stack size 20 bytes, pca9685.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = PCA9685_Set_PWM &rArr; PCA9685_Write
</UL>
<BR>[Calls]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PCA9685_Write
</UL>
<BR>[Called By]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Pca9685_ESC_Control
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PCA9685_Servo_Range_Control
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PCA9685_Servo_Angle_Control
</UL>

<P><STRONG><a name="[8e]"></a>PCA9685_Servo_Angle_Control</STRONG> (Thumb, 76 bytes, Stack size 16 bytes, pca9685.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;floor
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2uiz
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PCA9685_Set_PWM
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_scalbn
</UL>

<P><STRONG><a name="[8f]"></a>PCA9685_Servo_Range_Control</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, pca9685.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = PCA9685_Servo_Range_Control &rArr; floor &rArr; __aeabi_drsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;floor
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2uiz
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PCA9685_Set_PWM
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ESC_Servo_Init
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PID_UP_DOWN_Control
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PID_Aileron_Control
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UP_DOWN_Control
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Aileron_Control
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Direction_Control
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Accelerator_Control
</UL>

<P><STRONG><a name="[90]"></a>Pca9685_ESC_Control</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, pca9685.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;floor
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2uiz
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PCA9685_Set_PWM
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[55]"></a>PCA9685_Init</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, pca9685.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = PCA9685_Init &rArr; PCA9685_Set_Freq &rArr; floor &rArr; __aeabi_drsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PCA9685_Set_Freq
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PCA9685_Read
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C0_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[51]"></a>Log_Init</STRONG> (Thumb, 82 bytes, Stack size 24 bytes, log.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = Log_Init &rArr; PORT_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Open
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Init
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PORT_Init
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[4d]"></a>fputc</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, log.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = fputc
</UL>
<BR>[Calls]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_IsTXBusy
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_WriteByte
</UL>
<BR>[Address Reference Count : 1]<UL><LI> printfb.o(i.__0printf$bare)
</UL>
<P><STRONG><a name="[56]"></a>ESC_Servo_Init</STRONG> (Thumb, 116 bytes, Stack size 16 bytes, control.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = ESC_Servo_Init &rArr; PCA9685_Servo_Range_Control &rArr; floor &rArr; __aeabi_drsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PCA9685_Servo_Range_Control
</UL>
<BR>[Called By]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[92]"></a>Accelerator_Control</STRONG> (Thumb, 92 bytes, Stack size 8 bytes, control.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = Accelerator_Control &rArr; PCA9685_Servo_Range_Control &rArr; floor &rArr; __aeabi_drsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;floor
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2uiz
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PCA9685_Servo_Range_Control
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
</UL>
<BR>[Called By]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Control_Handle
</UL>

<P><STRONG><a name="[95]"></a>Direction_Control</STRONG> (Thumb, 104 bytes, Stack size 8 bytes, control.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = Direction_Control &rArr; PCA9685_Servo_Range_Control &rArr; floor &rArr; __aeabi_drsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;floor
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2uiz
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PCA9685_Servo_Range_Control
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
</UL>
<BR>[Called By]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Control_Handle
</UL>

<P><STRONG><a name="[96]"></a>Aileron_Control</STRONG> (Thumb, 104 bytes, Stack size 8 bytes, control.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = Aileron_Control &rArr; PCA9685_Servo_Range_Control &rArr; floor &rArr; __aeabi_drsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;floor
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2uiz
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PCA9685_Servo_Range_Control
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
</UL>
<BR>[Called By]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Control_Handle
</UL>

<P><STRONG><a name="[97]"></a>UP_DOWN_Control</STRONG> (Thumb, 106 bytes, Stack size 8 bytes, control.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = UP_DOWN_Control &rArr; PCA9685_Servo_Range_Control &rArr; floor &rArr; __aeabi_drsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;floor
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2uiz
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PCA9685_Servo_Range_Control
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
</UL>
<BR>[Called By]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Control_Handle
</UL>

<P><STRONG><a name="[98]"></a>PID_Aileron_Control</STRONG> (Thumb, 96 bytes, Stack size 16 bytes, control.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = PID_Aileron_Control &rArr; PCA9685_Servo_Range_Control &rArr; floor &rArr; __aeabi_drsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2uiz
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PCA9685_Servo_Range_Control
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PID_Handle
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
</UL>
<BR>[Called By]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Control_Handle
</UL>

<P><STRONG><a name="[99]"></a>PID_UP_DOWN_Control</STRONG> (Thumb, 98 bytes, Stack size 16 bytes, control.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = PID_UP_DOWN_Control &rArr; PCA9685_Servo_Range_Control &rArr; floor &rArr; __aeabi_drsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2uiz
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PCA9685_Servo_Range_Control
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PID_Handle
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
</UL>
<BR>[Called By]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Control_Handle
</UL>

<P><STRONG><a name="[5a]"></a>Control_Handle</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, control.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = Control_Handle &rArr; PID_UP_DOWN_Control &rArr; PCA9685_Servo_Range_Control &rArr; floor &rArr; __aeabi_drsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PID_UP_DOWN_Control
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PID_Aileron_Control
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UP_DOWN_Control
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Aileron_Control
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Direction_Control
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Accelerator_Control
</UL>
<BR>[Called By]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[59]"></a>is_Auto_Manual</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, control.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[84]"></a>__aeabi_fadd</STRONG> (Thumb, 164 bytes, Stack size 16 bytes, fadd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = __aeabi_fadd &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_float_round
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_float_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_frsub
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PID_Handle
</UL>

<P><STRONG><a name="[7f]"></a>__aeabi_fsub</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, fadd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = __aeabi_fsub &rArr; __aeabi_fadd &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
</UL>
<BR>[Called By]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PID_Handle
</UL>

<P><STRONG><a name="[81]"></a>__aeabi_frsub</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, fadd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = __aeabi_frsub &rArr; __aeabi_fadd &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
</UL>
<BR>[Called By]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PID_Handle
</UL>

<P><STRONG><a name="[82]"></a>__aeabi_fmul</STRONG> (Thumb, 100 bytes, Stack size 8 bytes, fmul.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_fmul
</UL>
<BR>[Called By]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PID_Handle
</UL>

<P><STRONG><a name="[83]"></a>__aeabi_fdiv</STRONG> (Thumb, 124 bytes, Stack size 8 bytes, fdiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_fdiv
</UL>
<BR>[Calls]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_float_round
</UL>
<BR>[Called By]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PID_Handle
</UL>

<P><STRONG><a name="[80]"></a>__ARM_scalbnf</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, fscalb.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PID_Handle
</UL>

<P><STRONG><a name="[ce]"></a>scalbnf</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, fscalb.o(.text), UNUSED)

<P><STRONG><a name="[79]"></a>__aeabi_dadd</STRONG> (Thumb, 322 bytes, Stack size 48 bytes, dadd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_lasr
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MPU6050_UART_Handle
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;floor
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PID_Aileron_Control
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UP_DOWN_Control
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Aileron_Control
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Direction_Control
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Accelerator_Control
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Pca9685_ESC_Control
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PCA9685_Servo_Range_Control
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PCA9685_Servo_Angle_Control
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PCA9685_Set_Freq
</UL>

<P><STRONG><a name="[93]"></a>__aeabi_dsub</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, dadd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = __aeabi_dsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PID_UP_DOWN_Control
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UP_DOWN_Control
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Accelerator_Control
</UL>

<P><STRONG><a name="[a0]"></a>__aeabi_drsub</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, dadd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = __aeabi_drsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;floor
</UL>

<P><STRONG><a name="[76]"></a>__aeabi_dmul</STRONG> (Thumb, 228 bytes, Stack size 48 bytes, dmul.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MPU6050_UART_Handle
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PID_UP_DOWN_Control
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PID_Aileron_Control
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UP_DOWN_Control
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Aileron_Control
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Direction_Control
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Accelerator_Control
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PCA9685_Set_Freq
</UL>

<P><STRONG><a name="[78]"></a>__aeabi_ddiv</STRONG> (Thumb, 222 bytes, Stack size 32 bytes, ddiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = __aeabi_ddiv &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
</UL>
<BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MPU6050_UART_Handle
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Pca9685_ESC_Control
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PCA9685_Servo_Range_Control
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PCA9685_Servo_Angle_Control
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PCA9685_Set_Freq
</UL>

<P><STRONG><a name="[75]"></a>__ARM_scalbn</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, dscalb.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __ARM_scalbn
</UL>
<BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MPU6050_UART_Handle
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PCA9685_Servo_Angle_Control
</UL>

<P><STRONG><a name="[cf]"></a>scalbn</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, dscalb.o(.text), UNUSED)

<P><STRONG><a name="[74]"></a>__aeabi_i2d</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, dflti.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = __aeabi_i2d &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MPU6050_UART_Handle
</UL>

<P><STRONG><a name="[88]"></a>__aeabi_ui2d</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, dfltui.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = __aeabi_ui2d &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PID_UP_DOWN_Control
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PID_Aileron_Control
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UP_DOWN_Control
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Aileron_Control
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Direction_Control
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Accelerator_Control
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PCA9685_Servo_Range_Control
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PCA9685_Servo_Angle_Control
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PCA9685_Set_Freq
</UL>

<P><STRONG><a name="[94]"></a>__aeabi_f2uiz</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, ffixui.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PID_UP_DOWN_Control
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PID_Aileron_Control
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UP_DOWN_Control
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Aileron_Control
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Direction_Control
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Accelerator_Control
</UL>

<P><STRONG><a name="[8b]"></a>__aeabi_d2uiz</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, dfixui.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_d2uiz
</UL>
<BR>[Calls]<UL><LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
</UL>
<BR>[Called By]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Pca9685_ESC_Control
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PCA9685_Servo_Range_Control
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PCA9685_Servo_Angle_Control
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PCA9685_Set_Freq
</UL>

<P><STRONG><a name="[89]"></a>__aeabi_f2d</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, f2d.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UP_DOWN_Control
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Aileron_Control
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Direction_Control
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Accelerator_Control
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PCA9685_Set_Freq
</UL>

<P><STRONG><a name="[77]"></a>__aeabi_d2f</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, d2f.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_d2f
</UL>
<BR>[Calls]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_float_round
</UL>
<BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MPU6050_UART_Handle
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PID_UP_DOWN_Control
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PID_Aileron_Control
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UP_DOWN_Control
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Aileron_Control
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Direction_Control
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Accelerator_Control
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PCA9685_Set_Freq
</UL>

<P><STRONG><a name="[9c]"></a>__aeabi_llsl</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, llshl.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>

<P><STRONG><a name="[d0]"></a>_ll_shift_l</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, llshl.o(.text), UNUSED)

<P><STRONG><a name="[a1]"></a>__aeabi_llsr</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, llushr.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2uiz
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>

<P><STRONG><a name="[d1]"></a>_ll_ushift_r</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, llushr.o(.text), UNUSED)

<P><STRONG><a name="[9d]"></a>__aeabi_lasr</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, llsshr.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[d2]"></a>_ll_sshift_r</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, llsshr.o(.text), UNUSED)

<P><STRONG><a name="[d3]"></a>__I$use$fp</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, iusefp.o(.text), UNUSED)

<P><STRONG><a name="[9b]"></a>_float_round</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, fepilogue.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
</UL>

<P><STRONG><a name="[9a]"></a>_float_epilogue</STRONG> (Thumb, 92 bytes, Stack size 4 bytes, fepilogue.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = _float_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
</UL>

<P><STRONG><a name="[9f]"></a>_double_round</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, depilogue.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _double_round
</UL>
<BR>[Called By]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>

<P><STRONG><a name="[9e]"></a>_double_epilogue</STRONG> (Thumb, 156 bytes, Stack size 32 bytes, depilogue.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
</UL>
<BR>[Called By]<UL><LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[a5]"></a>__aeabi_cdrcmple</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, cdrcmple.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;floor
</UL>

<P><STRONG><a name="[4f]"></a>__scatterload</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, init.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main_after_scatterload
</UL>
<BR>[Called By]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_main_scatterload
</UL>

<P><STRONG><a name="[d4]"></a>__scatterload_rt2</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, init.o(.text), UNUSED)

<P><STRONG><a name="[a3]"></a>__0printf$bare</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, printfb.o(i.__0printf$bare), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[d5]"></a>__1printf$bare</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, printfb.o(i.__0printf$bare), UNUSED)

<P><STRONG><a name="[6c]"></a>__2printf</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, printfb.o(i.__0printf$bare))
<BR><BR>[Called By]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SBUS_Init
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PID_Init
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PCA9685_Init
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MPU6050_Init
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Log_Init
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ESC_Servo_Init
</UL>

<P><STRONG><a name="[d6]"></a>__scatterload_copy</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_copy), UNUSED)

<P><STRONG><a name="[d7]"></a>__scatterload_null</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_null), UNUSED)

<P><STRONG><a name="[d8]"></a>__scatterload_zeroinit</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_zeroinit), UNUSED)

<P><STRONG><a name="[8a]"></a>floor</STRONG> (Thumb, 204 bytes, Stack size 24 bytes, floor.o(i.floor))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = floor &rArr; __aeabi_drsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UP_DOWN_Control
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Aileron_Control
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Direction_Control
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Accelerator_Control
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Pca9685_ESC_Control
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PCA9685_Servo_Range_Control
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PCA9685_Servo_Angle_Control
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PCA9685_Set_Freq
</UL>
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[5d]"></a>NVIC_EnableIRQ</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, swm320_i2c.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Init
</UL>

<P><STRONG><a name="[5e]"></a>NVIC_DisableIRQ</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, swm320_i2c.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Init
</UL>

<P><STRONG><a name="[61]"></a>NVIC_EnableIRQ</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, swm320_timr.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMR_INTEn
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMR_Init
</UL>

<P><STRONG><a name="[65]"></a>NVIC_EnableIRQ</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, swm320_uart.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Init
</UL>

<P><STRONG><a name="[66]"></a>NVIC_DisableIRQ</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, swm320_uart.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Init
</UL>

<P><STRONG><a name="[7b]"></a>NVIC_EnableIRQ</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, mpu6050_uart.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MPU6050_UART_Handle
</UL>

<P><STRONG><a name="[a4]"></a>_printf_core</STRONG> (Thumb, 34 bytes, Stack size 24 bytes, printfb.o(i._printf_core), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0printf$bare
</UL>
<P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
